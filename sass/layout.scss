@use "mixins" as *;

$areas: ("header", "aside", "main", "footer");

body {
  min-height: 100vh;
  width: 100%;
  overflow-y: scroll;
  display: grid;
  grid-template:
    "header" auto
    "aside" auto
    "main" 1fr
    "footer" auto
    / 100%;

  background: var(--bg-b);
  color: var(--text);
}

body > * {
  grid-column: 2;
}

@each $area in $areas {
  #{$area} {
    grid-area: #{$area};
    background: var(--bg-color);
  }
}

#{$areas} {
  padding: 1em;
}

footer,
header {
  text-align: center;
}

main {
  max-width: 80ch;
  width: 100%;
  margin: 0 auto;

  > :not(:last-child) {
    margin-bottom: 0.5em;
  }

  section:not(:last-child) {
    margin-bottom: 1em;
  }
}

blockquote {
  padding: 0.75em 0.5em 0.75em 1em;
  background: var(--bg);
  border-left: 2px solid var(--accent);
}

hr {
  border: 1px solid var(--accent);
  border-radius: 99em;
  margin: 0.75em 0;

  &::before {
    color: var(--accent);
    content: "//";
    letter-spacing: 2px;
    border-radius: 99em;
    position: absolute;
    padding: 0 0.5em;
    left: 50%;
    transform: translate(50%, -50%);
    background: var(--bg-color);
  }
}

nav {
  padding: 0.5em;

  > ul {
    display: flex;
    flex-wrap: wrap;
    list-style: none;
    justify-content: center;
    gap: 0.5em;

    a {
      font-size: 1.2em;
      border: 1px solid var(--text);
      padding: 0.25em 0.75em;
      border-radius: 99em;

      &:focus,
      &:focus-visible {
        background: var(--bg);
        filter: none;
      }
    }
  }
}

@include desktop {
  body {
    grid-template:
      "header header" auto
      "aside main" 1fr
      "aside footer" auto
      / auto 1fr;
  }
}
